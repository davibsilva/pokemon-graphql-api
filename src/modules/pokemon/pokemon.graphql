type Type {
  id: Int!
  name: String!
}

type PokemonType {
  type: Type!
}

type Pokemon {
  id: Int!
  name: String!
  types: [PokemonType!]!
  created_at: String!
  createdBy: User
  createdById: Int
}

type User {
  id: Int!
  email: String!
  created_at: String!
  pokemons: [Pokemon]
}

input CreatePokemonInput {
  name: String!
  types: [String!]!
}

input UpdatePokemonInput {
  name: String
  types: [String!]
}

enum SortOrder {
  ASC
  DESC
}

type PokemonList {
  results: [Pokemon!]!
}

type Query {
  getOnePokemon(id: Int!): Pokemon

  getAllPokemons(
    offset: Int = 0,
    limit: Int = 10,
    type: String,
    name: String,
    sortByCreatedAt: SortOrder = DESC
  ): PokemonList!
}

type Mutation {
  createOnePokemon(data: CreatePokemonInput!): Pokemon!
  updateOnePokemon(id: Int!, data: UpdatePokemonInput!): Pokemon!
  deleteOnePokemon(id: Int!): Boolean!

  importPokemonById(id: Int!): Pokemon!
}
